version: '3'
services:
  
  redis:
    image: redis:alpine
    ports:
      - "6379"
    networks:
      - frontend
    volumes:
    depends_on:
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      placement:
        constraints:
      restart_policy:
        contition: on-failure
  db:
    image: postgres:9.4
    ports:
    networks:
      - backend
    volumes: db-data:/var/lib/postgresql/data
    depends_on:
    deploy:
      replicas:
      update_config:
        parallelism:
        delay:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        contition:
  vote:
    image: dockersamples/examplevotinapp_vote:before
    ports:
      - 5000:80
    networks:
      - frontend
    volumes:
    depends_on:
      - redis
    deploy:
      replicas: 3
      update_config:
        parallelism: 3
      restart_policy:
        contition: on-failure
  result:
    image: dockersamples/examplevotinapp_result:before
    ports:
      - 5001:80
    networks:
      - backend
    volumes:
    depends_on:
      - db
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        contition: on-failure
  worker:
    image: dockersamples/examplevotinapp_worker
    networks:
      - backend
      - frontend
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=VOTING]
      restart_policy:
        contition: on-failure
        delay: 10s
        max_attemps: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
        
